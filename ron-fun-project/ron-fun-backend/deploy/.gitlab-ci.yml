stages:
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

# 测试阶段
test:
  stage: test
  image: python:3.12-slim
  services:
    - name: mysql:8.0
      alias: mysql
  variables:
    MYSQL_DATABASE: test_db
    MYSQL_ROOT_PASSWORD: test_password
    MYSQL_USER: test_user
    MYSQL_PASSWORD: test_password
    MYSQL_SERVER: mysql
    MYSQL_PORT: 3306
  before_script:
    - pip install uv
    - uv pip install -r requirements.txt
    - uv pip install pytest pytest-cov
  script:
    - cd ron-fun-project/ron-fun-backend
    - python -m pytest tests/ --cov=app
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    paths:
      - ron-fun-project/ron-fun-backend/htmlcov/
    expire_in: 1 week

# 构建阶段
build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd ron-fun-project/ron-fun-backend
    - docker build -t $CONTAINER_TEST_IMAGE -f deploy/Dockerfile .
    - docker push $CONTAINER_TEST_IMAGE
    - if [ "$CI_COMMIT_BRANCH" = "main" ]; then
        docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE;
        docker push $CONTAINER_RELEASE_IMAGE;
      fi
  only:
    - branches

# 部署到测试环境
deploy_staging:
  stage: deploy
  image: 
    name: alpine/helm:3.12.0
    entrypoint: [""]
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$STAGING_SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $STAGING_SERVER >> ~/.ssh/known_hosts
  script:
    - scp -r ron-fun-project/ron-fun-backend/deploy/* root@$STAGING_SERVER:/opt/ron-fun/
    - ssh root@$STAGING_SERVER "cd /opt/ron-fun && docker-compose pull && docker-compose up -d"
  environment:
    name: staging
    url: https://staging.ron.fun
  only:
    - develop

# 部署到生产环境
deploy_production:
  stage: deploy
  image: 
    name: alpine/helm:3.12.0
    entrypoint: [""]
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$PRODUCTION_SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $PRODUCTION_SERVER >> ~/.ssh/known_hosts
  script:
    - scp -r ron-fun-project/ron-fun-backend/deploy/* root@$PRODUCTION_SERVER:/opt/ron-fun/
    - ssh root@$PRODUCTION_SERVER "cd /opt/ron-fun && docker-compose pull && docker-compose up -d"
  environment:
    name: production
    url: https://ron.fun
  when: manual
  only:
    - main 